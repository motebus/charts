apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-deployment
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
       app: {{ .Release.Name }}-deployment
    spec:
{{- if .Values.podDnsPolicy}}
      dnsPolicy: {{ .Values.podDnsPolicy}}
{{- end}}
{{- if .Values.podDnsConfig}}
      dnsConfig:
{{ toYaml .Values.podDnsConfig | indent 8}}
{{- end}}
{{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector}}
{{- end }}
      containers:
        - name: sscreen
          image: {{ .Values.image.repository.sscreen}}
          env:
            - name: TZ
              value: {{ .Values.timezone}}
            - name: MCHAT_MBGWIP
              value: {{ .Values.MCHAT_MBGWIP}}
            - name: MCHAT_DC
              value: {{ .Values.MCHAT_DC}}
          ports:
           - name: sscreen-port
             containerPort: {{ .Values.container.port}}
          imagePullPolicy: {{ .Values.image.pullPolicy.sscreen}}
          volumeMounts:
            - name: tz
              mountPath: /etc/localtime

        - name: motebus
          image: {{ .Values.image.repository.motebus}}
          env:
            - name: TZ
              value: {{ .Values.timezone}}
            - name: MBSTACK_BUSMODE
              value: {{.Values.MBSTACK_BUSMODE | quote}}
            - name: MBSTACK_UPSTREAM
              value: {{.Values.MBSTACK_UPSTREAM}}
            - name: MBSTACK_IPFINDER
              value: {{ .Values.MBSTACK_IPFINDER | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy.motebus}}
          volumeMounts:
            - name: tz
              mountPath: /etc/localtime

      volumes:
        - name: tz
          hostPath: 
            path: /etc/localtime
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  type: {{ .Values.service.type }}
  selector:
    app: {{ .Release.Name }}-deployment
  ports:
    - protocol: {{ .Values.service.protocol }}
{{- if eq .Values.service.type "NodePort"}}
      nodePort: {{ .Values.service.nodePort}}
{{- end}}
      port: {{ .Values.service.port}}
      targetPort: sscreen-port

