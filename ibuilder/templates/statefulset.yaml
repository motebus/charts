apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-deployment
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
       app: {{ .Release.Name }}-deployment
    spec:
{{- if .Values.podDnsPolicy}}
      dnsPolicy: {{ .Values.podDnsPolicy}}
{{- end}}
{{- if .Values.podDnsConfig}}
      dnsConfig:
{{ toYaml .Values.podDnsConfig | indent 8}}
{{- end}}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      containers:
        - name: jupyter
          image: {{ .Values.jupyter.image.repository }}:{{ .Values.jupyter.image.tag }}
          env:
            - name: username
              value: {{.Values.USERNAME}}
            - name: token
              value: {{.Values.TOKEN}}
            - name: MLFLOW_S3_ENDPOINT_URL
              value: {{.Values.MLFLOW_S3_ENDPOINT_URL}}
            - name: AWS_ACCESS_KEY_ID
              value: {{.Values.AWS_ACCESS_KEY_ID}}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{.Values.AWS_SECRET_ACCESS_KEY}}
            - name: MLFLOW_TRACKING_URI
              value: {{.Values.MLFLOW_TRACKING_URI}}
{{- if .Values.jupyter.container.extraEnvs }}
{{ toYaml .Values.jupyter.container.extraEnvs | indent 12 }}
{{- end }}
          ports:
           - name: jupyter-port
             containerPort: 8888
          command: {{ .Values.jupyter.container.command}}
          imagePullPolicy: {{ .Values.jupyter.image.pullPolicy}}
          volumeMounts:
            - name: jupyter-vol
              mountPath: /home/{{.Values.USERNAME}}
            - name: tz
              mountPath: /etc/localtime

      volumes:
        - name: tz
          hostPath:
            path: /etc/localtime             

  volumeClaimTemplates:
{{- if .Values.jupyter.persistence.enabled}}
    - metadata:
        name: jupyter-vol
      spec:
        accessModes:  [ {{ .Values.jupyter.persistence.accessMode | quote }} ]
        storageClassName: {{ .Values.jupyter.persistence.storageClass | quote }}
        resources:
            requests:
                storage: {{ .Values.jupyter.persistence.size | quote }}
{{- end}}