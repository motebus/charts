{{- if .Values.imodel.ingress.enabled}}
{{- $imodelIngressPath := .Values.imodel.ingress.path -}}
{{- $imodelServicePort := .Values.imodel.service.port -}}
{{- $releaseName := .Release.Name -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-imodel
  annotations:
    kubernetes.io/ingress.class: "{{ .Values.ingressClassName }}"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.ingressClassName }}
{{- if .Values.https }}
  tls:
    - hosts:
      - {{ .Values.hostName }}
#      secretName: {{ .Values.hostName }}-tls
{{- end }}
  rules:
    - host: {{ .Values.hostName }}
      http:
        paths:
          - path: {{ $imodelIngressPath }}
            pathType: Prefix
            backend:
              service:
                name: {{ $releaseName }}-imodel
                port:
                  number: {{ $imodelServicePort }}
{{- end}}
---
{{- if .Values.swagger.ingress.enabled}}
{{- $swaggerIngressPath := .Values.swagger.ingress.path -}}
{{- $swaggerServicePort := .Values.swagger.service.port -}}
{{- $releaseName := .Release.Name -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-swagger
  annotations:
    kubernetes.io/ingress.class: "{{ .Values.ingressClassName }}"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: {{ .Values.ingressClassName }}
{{- if .Values.https }}
  tls:
    - hosts:
      - {{ .Values.hostName }}
#      secretName: {{ .Values.hostName }}-tls
{{- end }}
  rules:
    - host: {{ .Values.hostName }}
      http:
        paths:
          - path: {{ $swaggerIngressPath }}
            pathType: Prefix
            backend:
              service:
                name: {{ $releaseName }}-swagger
                port:
                  number: {{ $swaggerServicePort }}
{{- end}}